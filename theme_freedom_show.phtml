

<?php
$translate = $this->plugin('translate');
$escape = $this->plugin('escapeHtml');

$this->headLink()->appendStylesheet($this->assetUrl('css/resource-page-blocks.css', 'Omeka'));
$this->htmlElement('body')->appendAttribute('class', 'item resource show');

$filterLocale = (bool) $this->siteSetting('filter_locale_values');
$lang = $this->lang();
$valueLang = $filterLocale ? [$lang, ''] : null;

// Regions
$mainBlockContent = $this->resourcePageBlocks($item);
$mainHasBlocks = $mainBlockContent->hasBlocks();
$leftSidebarBlockContent = $this->resourcePageBlocks($item, 'left');
$leftSidebarHasBlocks = $leftSidebarBlockContent->hasBlocks();
$rightSidebarBlockContent = $this->resourcePageBlocks($item, 'right');
$rightSidebarHasBlocks = $rightSidebarBlockContent->hasBlocks();
?>

<?php echo $this->ResourceTags($item); ?>
<?php echo $this->pageTitle($item->displayTitle(null, $valueLang), 1); ?>

<?php $this->trigger('view.show.before'); ?>

<?php if ($mainHasBlocks || $leftSidebarHasBlocks || $rightSidebarHasBlocks): ?>
    <?php
    $additionalContainerClasses = '';
    if ($mainHasBlocks && $leftSidebarHasBlocks && $rightSidebarHasBlocks) {
        $additionalContainerClasses = 'regions-container--all';
    } elseif ($mainHasBlocks && !$leftSidebarHasBlocks && !$rightSidebarHasBlocks) {
        $additionalContainerClasses = 'regions-container--main';
    }
    
  
    $translate = $this->plugin('translate');
    $escape = $this->plugin('escapeHtml');
    
    $this->headLink()->appendStylesheet($this->assetUrl('css/resource-page-blocks.css', 'Omeka'));
    $this->htmlElement('body')->appendAttribute('class', 'item resource show');
    
    $filterLocale = (bool) $this->siteSetting('filter_locale_values');
    $lang = $this->lang();
    $valueLang = $filterLocale ? [$lang, ''] : null;
    
    $api = $this->api();
    $siteSlug = $this->params()->fromRoute('site-slug', '');
    
    // Function to extract the last numeric part of a URL (Omeka item reference)
function extractItemIdFromUrl(?string $url): ?int {
    if (!$url) return null;
    $path = parse_url($url, PHP_URL_PATH) ?? '';
    if (preg_match('/(\d+)\/?$/', $path, $m)) {
        return (int)$m[1];
    }
    return null;
}

// ** Get "Is Part Of" property value for the current item **
$partOfValue = $item->value('dcterms:isPartOf'); 
$partOfId = extractItemIdFromUrl($partOfValue);
$currentItemId = $item->id();

// echo "Issue Value (Full URL): " . htmlspecialchars($partOfValue) . "<br>";
// echo "Extracted Item ID for 'Is Part Of': " . htmlspecialchars($partOfId) . "<br>";

// ** Fetch all items that reference the same "Is Part Of" value ** 
$itemsWithSamePartOf = $api->search('items', [
    'property' => 33, // ✅ Use the correct Property ID for "dcterms:isPartOf"
    'type' => 'eq',
    'text' => $partOfValue, // Omeka stores full URL, so we search by the same
])->getContent();

// Debug: Print matched items
// echo "<pre style='background: white; color: black; padding: 10px; border: 2px solid red;'>";
// echo "<strong>DEBUG: Matching 'Is Part Of' Items</strong><br>";

$filteredItems = [];
foreach ($itemsWithSamePartOf as $itm) {
    $itmPartOfValue = $itm->value('dcterms:isPartOf');
    $itmPartOfId = extractItemIdFromUrl($itmPartOfValue);
    
    // echo "Item ID: " . $itm->id() . " - Extracted Is Part Of ID: " . htmlspecialchars($itmPartOfId) . "<br>";
    $itmResourceClasses = $itm->resourceClass();
    $isDocumentPart = $itmResourceClasses && strpos(strtolower($itmResourceClasses->label()), 'document part') !== false;
    
    // ✅ Compare by extracted numeric item ID, ignoring full URL differences
    if ($itmPartOfId === $partOfId && $isDocumentPart) {
        $filteredItems[] = $itm;
    }
}
// echo "</pre>";

// ** Sort by Item ID (same as before) **
usort($filteredItems, function ($a, $b) {
    return $a->id() - $b->id();
});

// ** Find the index of the current item **
$currentIndex = null;
foreach ($filteredItems as $index => $itm) {
    if ($itm->id() === $currentItemId) {
        $currentIndex = $index;
        break;
    }
}

// ** Determine Previous and Next Items **
$previousItem = ($currentIndex > 0) ? $filteredItems[$currentIndex - 1] : null;
$nextItem = ($currentIndex !== null && $currentIndex < count($filteredItems) - 1) ? $filteredItems[$currentIndex + 1] : null;

// ** Generate URLs for Previous and Next items **
$baseSiteUrl = $this->serverUrl(); // Base URL

$nextItemUrl = $nextItem ? $baseSiteUrl . "/issues/s/persian-press-pilot/item/" . $nextItem->id() : null;
$prevItemUrl = $previousItem ? $baseSiteUrl . "/issues/s/persian-press-pilot/item/" . $previousItem->id() : null;

// echo "Previous URL: " . ($prevItemUrl ?? 'None') . "<br>";
// echo "Next URL: " . ($nextItemUrl ?? 'None') . "<br>";

// echo "currentIndex: " . ($currentIndex ?? 'None') . "<br>";

    

?>
        <!-- Navigation Buttons (Top) -->
    <div class="navigation top-navigation">
        <?php if ($prevItemUrl): ?>
            <a href="<?php echo $escape($prevItemUrl); ?>" class="button previous">
                ← <?php echo $translate('Previous'); ?>
            </a>
        <?php endif; ?>
        
        <?php if ($nextItemUrl): ?>
            <a href="<?php echo $escape($nextItemUrl); ?>" class="button next">
                <?php echo $translate('Next'); ?> →
            </a>
        <?php endif; ?>
    </div>

    <div class="regions-container <?php echo $additionalContainerClasses; ?>">
        <?php if ($leftSidebarHasBlocks && $blockContent = $leftSidebarBlockContent->getBlocks()): ?>
            <div class="sidebar-region sidebar-region--left">
                <div class="metadata">
                    <?php echo $blockContent; ?>
                </div>
            </div>
        <?php endif; ?>

        <?php if ($mainHasBlocks && $blockContent = $mainBlockContent->getBlocks()): ?>
<div class="main-region">
    <div class="metadata">
        <?php 
        // Convert metadata into an array (Omeka stores it inside $blockContent)
        $metadataHtml = $blockContent;

        // Remove Extracted Text from metadata before displaying
        $cleanMetadata = preg_replace('/<div\s*class="property"\s*>\s*<dt>\s*extracted text\s*<\/dt>\s*<dd[^>]*>.*?<\/dd>\s*<\/div>/is', '', $metadataHtml);

        // Output metadata **without** Extracted Text 
        echo $cleanMetadata;

        // Extract and render "Extracted Text" separately
        $extractedText = $item->value('extracttext:extracted_text', ['default' => '']);

        // Render Extracted Text if available
        if (!empty($extractedText)) {
            echo '<div class="extracted-text-container">';
            echo '<strong>Extracted Text</strong><br>';
            echo $extractedText;
            echo '</div>';
        }
        ?>
    </div>
</div>

        <?php endif; ?>
        

        <?php if ($rightSidebarHasBlocks && $blockContent = $rightSidebarBlockContent->getBlocks()): ?>
            <div class="sidebar-region sidebar-region--right">
                <div class="metadata">
                    <?php echo $blockContent; ?>
                </div>
            </div>
        <?php endif; ?>
    </div>
<?php endif; ?>


<!--// ** Debugging Output **-->
<!--echo "<pre style='background: white; color: black; padding: 10px; border: 2px solid blue;'>";-->
<!--echo "<strong>DEBUG INFO:</strong><br>";-->
<!--echo "Issue Value: " . htmlspecialchars($issueValue) . "<br>";-->
<!--echo "Filtered Items with Same Issue:<br>";-->
<!--foreach ($filteredItems as $index => $itm) {-->
<!--    echo "[$index] ID: " . $itm->id() . " Title: " . htmlspecialchars($itm->displayTitle()) . "<br>";-->
<!--}-->
<!--echo "Current Item ID: " . $currentItemId . "<br>";-->
<!--echo "Current Index in List: " . ($currentIndex !== null ? $currentIndex : "Not Found") . "<br>";-->
<!--echo "Previous Item ID: " . ($previousItem ? $previousItem->id() : "None") . "<br>";-->
<!--echo "Next Item ID: " . ($nextItem ? $nextItem->id() : "None") . "<br>";-->
<!--echo "Previous URL: " . ($prevItemUrl ?? 'None') . "<br>";-->
<!--echo "Next URL: " . ($nextItemUrl ?? 'None') . "<br>";-->
<!--echo "</pre>";-->
<!--?>-->

<!-- Navigation Buttons -->
<div class="navigation">
    <?php if ($prevItemUrl): ?>
        <a href="<?php echo $escape($prevItemUrl); ?>" class="button previous">
            ← <?php echo $translate('Previous'); ?>
        </a>
    <?php endif; ?>
    
    <?php if ($nextItemUrl): ?>
        <a href="<?php echo $escape($nextItemUrl); ?>" class="button next">
            <?php echo $translate('Next'); ?> →
        </a>
    <?php endif; ?>
</div>

<?php $this->trigger('view.show.after'); ?>


